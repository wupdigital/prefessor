buildscript {
    ext {
        android_gradle_build_tools_version = '3.1.3'
        android_maven_publish_version = '3.6.2'
        detekt_version = '1.0.0.RC8'
        dokka_version = '0.9.17'
        gradle_bintray_plugin_version = '1.8.4'
        gradle_git_publish_version = '1.0.1'
        gradle_node_version = '1.2.0'
        kotlin_version = '1.2.70'
        kotlin_native_version = '0.9.1'
        node_version = '10.7.0'
        sonarqube_version = '2.6.2'
    }

    repositories {
        gradlePluginPortal()
        google()
        jcenter()
        maven {
            url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_gradle_build_tools_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$gradle_bintray_plugin_version"
        classpath "com.moowork.gradle:gradle-node-plugin:$gradle_node_version"
        classpath "digital.wup:android-maven-publish:$android_maven_publish_version"
        classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
        classpath "org.ajoberstar:gradle-git-publish:$gradle_git_publish_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:$kotlin_native_version"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$sonarqube_version"
    }
}

def isRelease() {
    !project.version.endsWith('-SNAPSHOT')
}

allprojects {
    group 'digital.wup.prefessor'
    version '0.1.0-SNAPSHOT'

    apply plugin: 'idea'

    repositories {

        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete buildDir
}

configure(subprojects) {
    apply from: "$rootDir/gradle/detekt.gradle"
    apply from: "$rootDir/gradle/maven-publish.gradle"
    apply from: "$rootDir/gradle/bintray-upload.gradle"
}

apply from: "$rootDir/gradle/publish-api-doc.gradle"
apply from: "$rootDir/gradle/sonarqube.gradle"

task deploy(dependsOn: [gitPublishCommit, bintrayUpload]) {
    group = 'publishin'
    doLast {
        println 'Release has published'
    }
}