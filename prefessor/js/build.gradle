apply plugin: 'kotlin-platform-js'
apply plugin: 'com.moowork.node'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    expectedBy project(":prefessor-common")
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

[compileKotlin2Js, compileTestKotlin2Js].each {
    it.configure {
        kotlinOptions {
            metaInfo = true
            sourceMap = true
            sourceMapEmbedSources = "always"
            moduleKind = 'commonjs'
        }
    }
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    version = node_version
    download = true
}

task installMocha(type: NpmTask) {
    args = ['install', 'mocha@~5.2.0', '--save-dev']
}

task installMockLocalStorage(type: NpmTask) {
    args = ['install', 'mock-local-storage@~1.0.5', '--save-dev']
}

task installDependencies(dependsOn: [installMocha, installMockLocalStorage])

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installDependencies]) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    script = file('node_modules/mocha/bin/mocha')
    args = [compileTestKotlin2Js.outputFile]
}

test.dependsOn runMocha

// Workaround the problem with Node downloading:
// Konan plugin uses Gradle-metadata feature which is not compatible
// with node plugin download implementation
repositories.whenObjectAdded { IvyArtifactRepository it ->
    if (it instanceof IvyArtifactRepository) {
        metadataSources {
            artifact()
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'

    from sourceSets.main.allSource.srcDirs
}